"use strict";(self.webpackChunkwata_docs=self.webpackChunkwata_docs||[]).push([[822],{7303:(e,a,s)=>{s.r(a),s.d(a,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>i,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"database","title":"\ud83d\udcbe Database System","description":"WATA uses DuckDB for fast in-memory analytics to store and analyze trading data. This approach provides several advantages for a trading system that needs to track performance metrics and analyze historical data.","source":"@site/docs/database.md","sourceDirName":".","slug":"/database","permalink":"/wata-docs/docs/database","draft":false,"unlisted":false,"editUrl":"https://github.com/IOITI/wata-docs/tree/main/docs/database.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7},"sidebar":"tutorialSidebar","previous":{"title":"\ud83d\udd11  Webhook Token Management","permalink":"/wata-docs/docs/web-server-token"},"next":{"title":"\ud83d\udcc8 Reporting","permalink":"/wata-docs/docs/reporting"}}');var t=s(4848),r=s(8453);const i={sidebar_position:7},d="\ud83d\udcbe Database System",o={},c=[{value:"Database Architecture",id:"database-architecture",level:2},{value:"Data Structure",id:"data-structure",level:2},{value:"Database Configuration",id:"database-configuration",level:2},{value:"Data Extraction for Reporting",id:"data-extraction-for-reporting",level:2}];function l(e){const a={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.header,{children:(0,t.jsx)(a.h1,{id:"-database-system",children:"\ud83d\udcbe Database System"})}),"\n",(0,t.jsx)(a.p,{children:"WATA uses DuckDB for fast in-memory analytics to store and analyze trading data. This approach provides several advantages for a trading system that needs to track performance metrics and analyze historical data."}),"\n",(0,t.jsx)(a.h2,{id:"database-architecture",children:"Database Architecture"}),"\n",(0,t.jsx)(a.p,{children:"DuckDB was chosen for WATA because it provides:"}),"\n",(0,t.jsxs)(a.ul,{children:["\n",(0,t.jsxs)(a.li,{children:[(0,t.jsx)(a.strong,{children:"High-speed analytics"}),": In-memory processing with fast query execution"]}),"\n",(0,t.jsxs)(a.li,{children:[(0,t.jsx)(a.strong,{children:"SQL compatibility"}),": Familiar query language for data analysis"]}),"\n",(0,t.jsxs)(a.li,{children:[(0,t.jsx)(a.strong,{children:"Data integrity"}),": Reduced risk of database corruption"]}),"\n",(0,t.jsxs)(a.li,{children:[(0,t.jsx)(a.strong,{children:"Lightweight footprint"}),": Minimal server resource requirements"]}),"\n",(0,t.jsxs)(a.li,{children:[(0,t.jsx)(a.strong,{children:"Analytical capabilities"}),": Optimized for data analysis workloads"]}),"\n"]}),"\n",(0,t.jsx)(a.h2,{id:"data-structure",children:"Data Structure"}),"\n",(0,t.jsx)(a.p,{children:"The database stores several types of information:"}),"\n",(0,t.jsxs)(a.ol,{children:["\n",(0,t.jsxs)(a.li,{children:["\n",(0,t.jsx)(a.p,{children:(0,t.jsx)(a.strong,{children:"Order Tracking"})}),"\n",(0,t.jsxs)(a.ul,{children:["\n",(0,t.jsx)(a.li,{children:"Complete order history"}),"\n",(0,t.jsx)(a.li,{children:"Execution details (price, time, size)"}),"\n",(0,t.jsx)(a.li,{children:"Order states and status changes"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(a.li,{children:["\n",(0,t.jsx)(a.p,{children:(0,t.jsx)(a.strong,{children:"Position Management"})}),"\n",(0,t.jsxs)(a.ul,{children:["\n",(0,t.jsx)(a.li,{children:"Current and historical positions"}),"\n",(0,t.jsx)(a.li,{children:"Entry and exit points"}),"\n",(0,t.jsx)(a.li,{children:"Performance metrics (P&L, duration)"}),"\n",(0,t.jsx)(a.li,{children:"Position attributes (instrument, direction)"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(a.li,{children:["\n",(0,t.jsx)(a.p,{children:(0,t.jsx)(a.strong,{children:"Performance Analytics"})}),"\n",(0,t.jsxs)(a.ul,{children:["\n",(0,t.jsx)(a.li,{children:"Daily statistics"}),"\n",(0,t.jsx)(a.li,{children:"Cumulative performance"}),"\n",(0,t.jsx)(a.li,{children:"Win/loss metrics"}),"\n",(0,t.jsx)(a.li,{children:"Trading patterns"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(a.h2,{id:"database-configuration",children:"Database Configuration"}),"\n",(0,t.jsxs)(a.p,{children:["The database location is specified in the ",(0,t.jsx)(a.code,{children:"config.json"})," file:"]}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-json",children:'"duckdb": {\n  "persistant": {\n    "db_path": "/app/var/lib/duckdb/trading_data.duckdb"\n  }\n}\n'})}),"\n",(0,t.jsx)(a.p,{children:"This configurable path allows you to:"}),"\n",(0,t.jsxs)(a.ul,{children:["\n",(0,t.jsx)(a.li,{children:"Back up the database easily"}),"\n",(0,t.jsx)(a.li,{children:"Set a custom location based on your server setup"}),"\n",(0,t.jsx)(a.li,{children:"Ensure data persistence across application restarts"}),"\n"]}),"\n",(0,t.jsx)(a.h2,{id:"data-extraction-for-reporting",children:"Data Extraction for Reporting"}),"\n",(0,t.jsx)(a.p,{children:"The database can be exported for use with the reporting dashboard:"}),"\n",(0,t.jsxs)(a.ol,{children:["\n",(0,t.jsx)(a.li,{children:"Data is extracted from the DuckDB database"}),"\n",(0,t.jsx)(a.li,{children:"Converted to Parquet format for efficient storage"}),"\n",(0,t.jsx)(a.li,{children:"Used by the Observable Framework dashboard for visualization"}),"\n"]}),"\n",(0,t.jsxs)(a.p,{children:["This extraction process is handled by the reporting scripts in the ",(0,t.jsx)(a.code,{children:"reporting/"})," directory."]})]})}function h(e={}){const{wrapper:a}={...(0,r.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}}}]);